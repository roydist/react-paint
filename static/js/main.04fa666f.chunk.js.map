{"version":3,"sources":["reducer/tools.reducer.js","context/ToolsContext.js","reducer/gesture.reducer.js","context/CursorContext.js","paint-area/Toolbar.js","paint-area/Element.js","paint-area/Canvas.js","util/tool-props.js","App.js","reportWebVitals.js","index.js"],"names":["toolsInitialState","currentToolId","currentColor","entities","toolsReducer","state","action","type","payload","id","hex","Error","ToolsContext","React","createContext","useToolsState","useContext","getCurrentTool","toolsState","ToolProvider","children","useReducer","dispatch","Provider","value","gestureInitialState","ref","strokeMode","start","x","y","end","gestureReduce","clientX","current","offsetLeft","clientY","offsetTop","CursorContext","GestureContext","useGestureState","CursorProvider","useState","position","setPosition","gestureState","setGestureState","mouseDown","mouseUp","mouseMove","useEffect","addEventListener","capture","removeEventListener","Toolbar","dispatchGestureAction","dispatchUpdateTools","currentTool","setTool","nanoid","className","onChange","e","source","classNames","active","onClick","selectTool","Rect","Circle","Ellipse","Line","Text","Element","props","Component","stroke","selected","onDragEnd","tool","disabled","evt","stopPropagation","target","drag","object","click","renderElement","Canvas","useRef","setToolsState","isDraggable","setDraggable","toolProps","height","width","radius","Math","sqrt","pow","abs","points","fill","Object","values","map","draggable","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04fa666f.chunk.js","sourcesContent":["export const toolsInitialState = {\r\n  currentToolId: null,\r\n  currentColor: null,\r\n  entities: {},\r\n};\r\n\r\nexport function toolsReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'UPDATE_TOOL':\r\n      return {\r\n        ...state,\r\n        currentToolId: action.payload.id,\r\n        entities: {\r\n          ...state.entities,\r\n          [action.payload.id]: {\r\n            ...action.payload,\r\n          },\r\n        },\r\n      };\r\n    case 'SELECT_EXISTING_TOOL':\r\n      return {\r\n        ...state,\r\n        currentToolId: action.payload,\r\n      };\r\n    case 'CLEAR_CURRENT_TOOL':\r\n      return {\r\n        ...state,\r\n        currentToolId: null,\r\n      };\r\n    case 'UPDATE_COLOR':\r\n      return {\r\n        ...state,\r\n        currentColor: action.payload.hex,\r\n      };\r\n    default:\r\n      throw new Error(`Unhandled type: ${action.type}`);\r\n  }\r\n}\r\n","import React, { useContext, useReducer } from 'react';\nimport { toolsReducer, toolsInitialState } from 'reducer/tools.reducer';\n\nexport const ToolsContext = React.createContext();\n\nexport function useToolsState() {\n  return useContext(ToolsContext);\n}\n\nexport function getCurrentTool() {\n  const [toolsState] = useContext(ToolsContext);\n  if (!!toolsState && !!toolsState.entities) {\n    return toolsState.entities[toolsState.currentToolId];\n  }\n}\n\nexport default function ToolProvider({ children }) {\n  const [state, dispatch] = useReducer(toolsReducer, toolsInitialState);\n\n  return (\n    <ToolsContext.Provider value={[state, dispatch]}>\n      {children}\n    </ToolsContext.Provider>\n  );\n}\n","export const gestureInitialState = {\r\n  ref: null,\r\n  strokeMode: 'none',\r\n  start: {\r\n    x: null,\r\n    y: null,\r\n  },\r\n  end: {\r\n    x: null,\r\n    y: null,\r\n  },\r\n};\r\n\r\nexport function gestureReduce(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_REF':\r\n      return {\r\n        ...state,\r\n        ref: action.payload,\r\n      };\r\n    case 'CLEAR_STROKE':\r\n      return {\r\n        ...state,\r\n        strokeMode: 'none',\r\n      };\r\n    case 'MOUSE_MOVE':\r\n      return {\r\n        ...state,\r\n        end: {\r\n          x: action.payload.clientX - state.ref.current.offsetLeft,\r\n          y: action.payload.clientY - state.ref.current.offsetTop,\r\n        },\r\n      };\r\n    case 'MOUSE_UP':\r\n      return {\r\n        ...state,\r\n        strokeMode: 'done',\r\n      };\r\n    case 'MOUSE_DOWN':\r\n      return {\r\n        ...state,\r\n        strokeMode: 'stroke',\r\n        start: {\r\n          x: action.payload.clientX - state.ref.current.offsetLeft,\r\n          y: action.payload.clientY - state.ref.current.offsetTop,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error(`Unhandled type: ${action.type}`);\r\n  }\r\n}\r\n","import React, { useState, useContext, useEffect, useReducer } from 'react';\nimport { gestureReduce, gestureInitialState } from '../reducer/gesture.reducer';\n\nconst CursorContext = React.createContext();\nconst GestureContext = React.createContext();\n\nexport function useGestureState() {\n  return useContext(GestureContext);\n}\n\nexport default function CursorProvider({ children }) {\n  const [position, setPosition] = useState({ clientX: 0, clientY: 0 });\n  const [gestureState, setGestureState] = useReducer(\n    gestureReduce,\n    gestureInitialState\n  );\n\n  const mouseDown = ({ clientX, clientY }) => {\n    setGestureState({\n      type: 'MOUSE_DOWN',\n      payload: { clientX, clientY },\n    });\n  };\n\n  const mouseUp = ({ clientX, clientY }) => {\n    setGestureState({\n      type: 'MOUSE_UP',\n      payload: { clientX, clientY },\n    });\n  };\n\n  const mouseMove = ({ clientX, clientY }) => {\n    setPosition({\n      clientX,\n      clientY,\n    });\n    setGestureState({\n      type: 'MOUSE_MOVE',\n      payload: { clientX, clientY },\n    });\n  };\n\n  useEffect(() => {\n    if (!!gestureState.ref && !!gestureState.ref.current) {\n      gestureState.ref.current.addEventListener('mousemove', mouseMove, {\n        capture: true,\n      });\n      gestureState.ref.current.addEventListener('mousedown', mouseDown, {\n        capture: true,\n      });\n      gestureState.ref.current.addEventListener('mouseup', mouseUp, {\n        capture: true,\n      });\n    }\n    return () => {\n      if (!!gestureState.ref && !!gestureState.ref.current) {\n        gestureState.ref.current.removeEventListener('mousemove', mouseMove);\n        gestureState.ref.current.removeEventListener('mousedown', mouseDown);\n        gestureState.ref.current.removeEventListener('mouseup', mouseUp);\n      }\n    };\n  }, [gestureState.ref]);\n\n  return (\n    <CursorContext.Provider value={[position.clientX, position.clientY]}>\n      <GestureContext.Provider value={[gestureState, setGestureState]}>\n        {children}\n      </GestureContext.Provider>\n    </CursorContext.Provider>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nanoid } from 'nanoid';\nimport { GithubPicker } from 'react-color';\nimport { useToolsState, getCurrentTool } from '../context/ToolsContext';\nimport './Toolbar.css';\nimport { useGestureState } from 'context/CursorContext';\n\nexport default function Toolbar() {\n  const [gestureState, dispatchGestureAction] = useGestureState();\n  const [_, dispatchUpdateTools] = useToolsState();\n  const currentTool = getCurrentTool();\n\n  const setTool = (type) => {\n    const id = nanoid();\n    dispatchUpdateTools({\n      type: 'UPDATE_TOOL',\n      payload: {\n        id,\n        type,\n      },\n    });\n    dispatchGestureAction({\n      type: 'CLEAR_STROKE',\n    });\n  };\n\n  const setColor = ({ hex, source }, e) => {\n    dispatchUpdateTools({\n      type: 'UPDATE_COLOR',\n      payload: {\n        hex,\n        source,\n      },\n    });\n  };\n\n  return (\n    <div className=\"toolbar-container\">\n      <GithubPicker onChange={setColor} />\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Clear',\n        })}\n        onClick={(e) => {\n          dispatchUpdateTools({\n            type: 'CLEAR_CURRENT_TOOL',\n          });\n        }}\n      >\n        Clear\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Arrow',\n        })}\n        onClick={(e) => {\n          dispatchUpdateTools({\n            type: 'CLEAR_CURRENT_TOOL',\n          });\n        }}\n      >\n        Arrow\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Rect',\n        })}\n        onClick={(e) => {\n          setTool('Rect');\n        }}\n      >\n        Rect\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Circle',\n        })}\n        onClick={() => {\n          setTool('Circle');\n        }}\n      >\n        Circle\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Line',\n        })}\n        onClick={() => {\n          setTool('Line');\n        }}\n      >\n        Line\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Ellipse',\n        })}\n        onClick={() => {\n          setTool('Ellipse');\n        }}\n      >\n        Ellipse\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Text',\n        })}\n        onClick={() => {\n          setTool('Text');\n        }}\n      >\n        Text\n      </div>\n      <div\n        className={classNames({\n          active: currentTool && currentTool.type === 'Star',\n        })}\n        onClick={() => {\n          setTool('Star');\n        }}\n      >\n        Star\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Rect, Circle, Ellipse, Line, Text } from 'react-konva';\n\nconst selectTool = {\n  Rect: Rect,\n  Circle: Circle,\n  Ellipse: Ellipse,\n  Line: Line,\n  Text: Text,\n};\n\nexport default function Element(props) {\n  const drag = (e, tool) => {\n    if (!props.disabled) {\n      e.evt.stopPropagation();\n      props.dispatch({\n        type: 'UPDATE_TOOL',\n        payload: {\n          ...tool,\n          x: e.target.x(),\n          y: e.target.y(),\n        },\n      });\n      props.dispatch({\n        type: 'CLEAR_CURRENT_TOOL',\n      });\n    }\n  };\n\n  const click = (e, object) => {\n    if (!props.disabled) {\n      e.evt.stopPropagation();\n      props.dispatch({\n        type: 'SELECT_EXISTING_TOOL',\n        payload: object.id,\n      });\n    }\n  };\n  const renderElement = () => {\n    const Component = selectTool[props.type];\n    const stroke = props.selected ? 'black' : '';\n    return (\n      <Component\n        {...props}\n        stroke={stroke}\n        onDragEnd={(e) => drag(e, props)}\n        onClick={(e) => click(e, props)}\n      />\n    );\n  };\n\n  return <>{renderElement()}</>;\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Layer, Stage } from 'react-konva';\nimport { getCurrentTool, useToolsState } from '../context/ToolsContext';\nimport { useGestureState } from 'context/CursorContext';\nimport { toolPropsFactory } from 'util/tool-props';\nimport Element from './Element';\n\nexport default function Canvas() {\n  const ref = useRef();\n  const currentTool = getCurrentTool();\n  const [toolsState, setToolsState] = useToolsState();\n  const [gestureState, setGestureState] = useGestureState();\n  const [isDraggable, setDraggable] = useState(false);\n\n  const { strokeMode, start, end } = gestureState;\n  useEffect(() => {\n    setGestureState({\n      type: 'SET_REF',\n      payload: ref,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!!currentTool && strokeMode === 'stroke') {\n      setDraggable(false);\n      const toolProps = toolPropsFactory(currentTool)(start, end);\n      setToolsState({\n        type: 'UPDATE_TOOL',\n        payload: {\n          ...currentTool,\n          ...toolProps,\n          x: start.x,\n          y: start.y,\n          fill: toolsState.currentColor,\n        },\n      });\n    } else if (strokeMode === 'done') {\n      setDraggable(true);\n      setToolsState({\n        type: 'CLEAR_CURRENT_TOOL',\n      });\n    }\n  }, [strokeMode, end.x, end.y]);\n\n  return (\n    <div className=\"paint-container\" ref={ref}>\n      <Stage width={800} height={500}>\n        <Layer>\n          {toolsState.entities &&\n            Object.values(toolsState.entities).map((object) => {\n              return (\n                <Element\n                  key={JSON.stringify(object)}\n                  {...object}\n                  draggable={isDraggable}\n                  disabled={!!currentTool}\n                  selected={currentTool && object.id === currentTool.id}\n                  dispatch={setToolsState}\n                />\n              );\n            })}\n        </Layer>\n      </Stage>\n      <div>{currentTool && currentTool.id}</div>\n    </div>\n  );\n}\n","export function toolPropsFactory(tool) {\r\n  const typeProxy = {\r\n    Rect: (start, end) => ({\r\n      height: end.y - start.y,\r\n      width: end.x - start.x,\r\n    }),\r\n    Circle: (start, end) => ({\r\n      radius: Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)),\r\n    }),\r\n    Ellipse: (start, end) => ({\r\n      height: Math.abs(end.y - start.y),\r\n      width: Math.abs(end.x - start.x),\r\n    }),\r\n    Line: (start, end) => {\r\n      if (!tool.points) {\r\n        tool.points = [start.x, start.y];\r\n      }\r\n      return {\r\n        points: [...tool.points, end.x, end.y],\r\n        stroke: 'red',\r\n      };\r\n    },\r\n  };\r\n\r\n  return typeProxy[tool.type];\r\n}\r\n","import React from 'react';\nimport Toolbar from 'paint-area/Toolbar';\nimport ToolProvider from './context/ToolsContext';\nimport CursorProvider from './context/CursorContext';\nimport './App.css';\nimport Canvas from 'paint-area/Canvas';\n\nconst App = () => {\n  return (\n    <ToolProvider>\n      <CursorProvider>\n        <div className=\"paint-wrapper\">\n          <Toolbar></Toolbar>\n          <Canvas></Canvas>\n        </div>\n      </CursorProvider>\n    </ToolProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}